name: "Workflow: Website Deployment"
on:
  push:
    branches:
      - master
      - conditional-workflows
jobs:
  job__lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Step: Clone code"
        uses: actions/checkout@v3
      # Though caching of dependencies happens only after the installation, we need write the caching step prior to installation step
      - name: "Step: Cache dependencies"
        id: "cache-deps"
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: "Step: Install dependencies"
        run: npm ci
      - name: "Step: Lint code"
        run: npm run lint

  job__test:
    runs-on: ubuntu-latest
    steps:
      - name: "Step: Clone code"
        uses: actions/checkout@v3
      - name: "Step: Cache Dependencies"
        id: "cache-deps"
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: "Step: Install dependencies"
        run: npm ci
      - name: "Step: Test code"
        run: npm run test
      - name: "Step: Save the `Test Report` into an OUTPUT VARIABLE called `TEST_REPORT`"
      - name: "Step: Upload the Test Report` i.e., test.json file to a `uploaded-test-report` named folder"
      # One can use this name `uploaded-test-report` to access the test.json file in further jobs

  job__build:
    runs-on: ubuntu-latest
    steps:
      - name: "Step: Clone code"
        uses: actions/checkout@v3
      - name: "Step: Cache Dependencies"
        id: "cache-deps"
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: "Step: Install dependencies"
        run: npm ci
      - name: "Step: Build code"
        run: npm run build
      - name: "Step: Get the dynamically generated project folder name (i.e., `dist`) and store it into an OUTPUT VARIABLE called `PROJECT_NAME`"
      - name: "Step: Upload the build artifacts present in the `dist` folder to a named `uploaded-build-artifacts` folder"
      - name: "Step: collect the { build artifacts + package.json + package-lock.json } into a folder named 'FILE_COLLECTIONS' folder"

  job__deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Step: Download the artifacts from the `uploaded-build-artifacts` folder into a `downloaded-build-artifacts` folder"
      - name: "Step: List out the contents in the `downloaded-build-artifacts` folder"
      - name: "Step: Print the Project name which is stored as an output variable"
      - name: "Step: Deploy"
